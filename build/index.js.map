{"version":3,"sources":["../src/index.js"],"names":["process","on","console","dir","getSiteOpts","names","Object","keys","Site","sort","flag","Set","n2up","reduce","acc","name","c","charAt","has","find","idx","every","Error","add","toLocaleUpperCase","map","short","type","description","argv","option","args","run","targets","length","some","options","help","exit","outputDir","output","errorTxt","error","searchers","words","puppeteer","launch","ignoreHTTPSErrors","headless","browser","newPage","page","log","frm","url","setViewport","Constants","viewport","errors","filter","s","search","fs","writeFile","join","err","stack","close"],"mappings":"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","file":"index.js","sourcesContent":["import 'babel-polyfill';  // eslint-disable-line import/no-extraneous-dependencies\nimport fs from 'fs';\nimport argv from 'argv';\nimport puppeteer from 'puppeteer';\nimport iconv from 'iconv-lite';\nimport { forEachSeries } from 'p-iteration';\nimport { Parser as Json2csvParser } from 'json2csv';\n\nimport Constants from './constants';\nimport Site from './site';\n\nprocess.on('unhandledRejection', console.dir);\n\n/**\n * サイト名からオプションデータを作成する。\n * 名前の一文字目を大文字にしたものがオプションになるが、すでにある場合は、二文字目以降で使われない文字を使う。\n * @return {Array<Object>} オプションデータ\n */\nfunction getSiteOpts() {\n  const names = Object.keys(Site).sort();\n  const flag = new Set();\n  const n2up = names.reduce((acc, name) => {\n    let c = name.charAt(0);\n    if (flag.has(c)) {\n      c = [ ...name, ...'0123456789'].find((c, idx) => idx > 0 && names.every(name => name.charAt(0) !== c));\n      if (!c) throw new Error('オプション設定できません');\n    }\n    flag.add(c);\n    acc[name] = c.toLocaleUpperCase();\n    return acc;\n  }, {})\n  return names.map(name => ({\n    name,\n    short: n2up[name],\n    type: 'boolean',\n    description: `search from ${name}`,\n  }));\n}\n\nargv.option([ {\n  name: 'output',\n  short: 'o',\n  type: 'path',\n  description: 'output csv directory path.',\n}, {\n  name: 'error',\n  short: 'e',\n  type: 'path',\n  description: 'output error file path.',\n}, {\n  name: 'debug-window',\n  type: 'boolean',\n  description: 'enable window',\n}, {\n  name: 'debug-url',\n  type: 'boolean',\n  description: 'enable log url',\n}, {\n  name: 'debug-pagetext',\n  type: 'boolean',\n  description: 'enable log url',\n}, {\n  name: 'enable-cheerio-httpcli',\n  type: 'boolean',\n  description: 'enable cheerio-httpcli.',\n}, ...getSiteOpts() ]);\nconst args = argv.run();\n\nif (args.targets.length < 1 || !Object.keys(Site).some(name => args.options[name])) {\n  argv.help();\n  process.exit(0);\n}\n\nconst outputDir = args.options.output || '.';\nconst errorTxt = args.options.error || 'error.txt';\nconst searchers = [];\n\n(async (words) => {\n  const browser = await puppeteer.launch({\n    ignoreHTTPSErrors: true,\n    headless: !args.options['debug-window'],\n    args: [\n      '--enable-features=NetworkService',\n      '--enable-logging',\n      '--no-sandbox',\n      '--v=1',\n      // `--proxy-server=${config.proxyUrl}`,\n    ],\n  });\n  try {\n    const page = await browser.newPage();\n    await page.on('framenavigated', frm => {\n      if (args.options['debug-url']) {\n        console.log(\"### URL \", frm.url());\n      }\n    });\n    await page.setViewport(Constants.viewport);\n\n    const errors = [];\n    const searchers = Object.keys(Site)\n      .filter(name => args.options[name])\n      .map(name => Site[name]({outputDir, page, errors, options: args.options}));\n\n    await forEachSeries(searchers, async s => await s.search(...words));\n\n    if (errors.length) {\n      console.log(`エラーが発生しました。${errorTxt} へ出力します。`);\n      fs.writeFile(errorTxt, errors.join('\\n'), (err) => {\n        if (err) {\n            throw err;\n        }\n      });\n    }\n  } catch (e) {\n    console.log(e.stack);\n  } finally {\n    console.log('finally');\n    browser.close();\n  }\n})(args.targets);\n"]}