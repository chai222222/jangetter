{"version":3,"sources":["../src/index.js"],"names":["process","on","console","dir","getSiteOpts","knownFlags","names","Object","keys","Site","sort","flag","Set","n2up","reduce","acc","name","c","charAt","has","find","idx","every","Error","add","toLocaleUpperCase","arg","map","short","type","description","getSrcConfig","top","fixedArgs","argv","option","filter","o","test","args","run","targets","length","some","options","help","exit","outputDir","output","errorTxt","error","searchers","words","puppeteer","launch","ignoreHTTPSErrors","headless","browser","newPage","page","log","frm","url","setUserAgent","Constants","userAgent","setViewport","viewport","rcPath","rcfile","rc","undefined","fs","existsSync","JSON","parse","readFileSync","errors","s","search","writeFile","join","err","stack","close"],"mappings":"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","file":"index.js","sourcesContent":["import 'babel-polyfill';  // eslint-disable-line import/no-extraneous-dependencies\nimport fs from 'fs';\nimport argv from 'argv';\nimport puppeteer from 'puppeteer';\nimport iconv from 'iconv-lite';\nimport { forEachSeries } from 'p-iteration';\nimport { Parser as Json2csvParser } from 'json2csv';\n\nimport Constants from './constants';\nimport Site from './site';\n\nprocess.on('unhandledRejection', console.dir);\n\n/**\n * サイト名からオプションデータを作成する。\n * 名前の一文字目を大文字にしたものがオプションになるが、すでにある場合は、二文字目以降で使われない文字を使う。\n * @return {Array<Object>} オプションデータ\n */\nfunction getSiteOpts(knownFlags) {\n  const names = Object.keys(Site).sort();\n  const flag = new Set(knownFlags);\n  const n2up = names.reduce((acc, name) => {\n    let c = name.charAt(0);\n    if (flag.has(c)) {\n      c = [ ...name, ...'0123456789'].find((c, idx) => idx > 0\n        && names.every(name => name.charAt(0) !== c)\n        && !flag.has(c));\n      if (!c) throw new Error('オプション設定できません');\n    }\n    flag.add(c);\n    acc[name] = c.toLocaleUpperCase();\n    return acc;\n  }, {})\n  const arg = {};\n  return names.map(name => ({\n    name,\n    short: n2up[name],\n    type: 'boolean',\n    description: `search from ${name}(${Site[name](arg).getSrcConfig().top}))`,\n  }));\n}\n\nconst fixedArgs = [ {\n  name: 'output',\n  short: 'o',\n  type: 'path',\n  description: 'output csv directory path.',\n}, {\n  name: 'image',\n  short: 'g',\n  type: 'boolean',\n  description: 'output picture.',\n}, {\n  name: 'error',\n  short: 'e',\n  type: 'path',\n  description: 'output error file path.',\n}, {\n  name: 'debug-window',\n  type: 'boolean',\n  description: 'enable window',\n}, {\n  name: 'debug-url',\n  type: 'boolean',\n  description: 'enable log url',\n}, {\n  name: 'debug-pagetext',\n  type: 'boolean',\n  description: 'enable page text',\n}, {\n  name: 'enable-cheerio-httpcli',\n  type: 'boolean',\n  description: 'enable cheerio-httpcli.',\n} ];\n\nargv.option([ ...fixedArgs, ...getSiteOpts(fixedArgs.filter(o => o.short && /^[A-Z]$/.test(o.short)).map(o => o.short)) ]);\nconst args = argv.run();\n\nif (args.targets.length < 1 || !Object.keys(Site).some(name => args.options[name])) {\n  argv.help();\n  process.exit(0);\n}\n\nconst outputDir = args.options.output || '.';\nconst errorTxt = args.options.error || 'error.txt';\nconst searchers = [];\n\n(async (words) => {\n  const browser = await puppeteer.launch({\n    ignoreHTTPSErrors: true,\n    headless: !args.options['debug-window'],\n    args: [\n      '--enable-features=NetworkService',\n      '--enable-logging',\n      '--no-sandbox',\n      '--v=1',\n      // `--proxy-server=${config.proxyUrl}`,\n    ],\n  });\n  try {\n    const page = await browser.newPage();\n    await page.on('framenavigated', frm => {\n      if (args.options['debug-url']) {\n        console.log(\"### URL \", frm.url());\n      }\n    });\n    await page.setUserAgent(Constants.userAgent);\n    await page.setViewport(Constants.viewport);\n    // rcファイル読み込み\n    const rcPath = Constants.rcfile;\n    let rc = undefined;\n    if (fs.existsSync(rcPath)) {\n      console.log('load rc file.');\n      rc = JSON.parse(fs.readFileSync(rcPath, 'utf8'));\n    }\n\n    const errors = [];\n    const searchers = Object.keys(Site)\n      .filter(name => args.options[name])\n      .map(name => Site[name]({outputDir, page, errors, rc, options: args.options}));\n\n    await forEachSeries(searchers, async s => await s.search(...words));\n\n    if (errors.length) {\n      console.log(`エラーが発生しました。${errorTxt} へ出力します。`);\n      fs.writeFile(errorTxt, errors.join('\\n'), (err) => {\n        if (err) {\n            throw err;\n        }\n      });\n    }\n  } catch (e) {\n    console.log(e.stack);\n  } finally {\n    console.log('finally');\n    browser.close();\n  }\n})(args.targets);\n"]}